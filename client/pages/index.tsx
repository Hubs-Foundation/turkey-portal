import type { GetServerSideProps, GetServerSidePropsContext } from 'next';
import { useEffect } from 'react';
import Head from 'next/head';
import { setAccount, logOut } from '../store/accountSlice';
import { useDispatch } from 'react-redux';
import axios, { AxiosRequestHeaders } from 'axios';
import { HubT, AccountT } from 'types/General';
import { PUBLIC_API_SERVER } from 'config';

const fetchData = async (
  context: GetServerSidePropsContext,
  resource: string
) => {
  const { cookie, accept, host, connection } = context.req.headers;
  const contextHeaders = {
    cookie: cookie ? cookie : '',
    accept: accept ? accept : 'application/json',
  } as AxiosRequestHeaders;
  if (host) contextHeaders.host = host;
  if (connection) contextHeaders.connection = connection;

  return await axios
    .get(`${PUBLIC_API_SERVER}/api/v1/${resource}`, {
      headers: contextHeaders,
    })
    .then((response) => response.data);
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  const hubs = await fetchData(context, 'hubs');
  const account = await fetchData(context, 'account');

  return {
    props: { hubs, account },
  };
};

type HomeProps = {
  hubs: Array<HubT>;
  account: AccountT;
};

const Home = ({ hubs, account }: HomeProps) => {
  const dispatch = useDispatch();

  /**
   * TODO : detele debugging consoles when finished
   */
  useEffect(() => {
    console.log('hubs', hubs);
    console.log('account', account);
  }, [hubs, account]);

  const handleClick = () => {
    dispatch(setAccount(account));
  };

  const handleLogoutClick = () => {
    dispatch(logOut());
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main>
        <h1>Turkey {account.email}</h1>
        <button onClick={handleClick}>login</button>

        {/* <button onClick={handleLogoutClick}>log out</button>

        <div className={styles.grid}>
          {
            hubs.length ? hubs.map((hub) => (
              <div key={hub.hub_id} className={styles.card}>
                <h2>{hub.name}</h2>
                {hub.status}
              </div>
            )) : ''

          }
        </div> */}
      </main>
    </div>
  );
};

export default Home;
